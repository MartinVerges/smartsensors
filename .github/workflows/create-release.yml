name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: 'Set up our JDK environment'
        uses: actions/setup-java@v1.4.3
        with:
          java-version: '11'

      - name: 'Make gradle executable'
        run: chmod +x gradlew

      - name: 'Build Project'
        run: ./gradlew build

      - name: 'Assemble Release'
        run: ./gradlew assembleRelease

      - name: 'Bundle Release AAB'
        run: ./gradlew bundleRelease

      - run: find .

      ## Sign our artifact##
      - name: 'Sign artifact'
        id: signArtifact
        uses: r0adkll/sign-android-release@v1.0.1
        with:
          releaseDirectory: smartsensors/build/outputs/bundle/release
          alias: ${{ secrets.KEYALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - run: find .

      - name: 'Upload our ABB'
        uses: actions/upload-artifact@v2
        with:
          name: Release artifact
          path: smartsensors/build/outputs/bundle/release/*.aab

      - name: 'Upload our APK'
        uses: actions/upload-artifact@v2
        with:
          name: Release artifact
          path: smartsensors/build/outputs/apk/release/*.apk

      - name: 'Create Release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: 'Save name of our Artifact'
        id: set-result-artifact
        run: |
          AAB_FILE=$(ls smartsensors/build/outputs/bundle/release/*.aab | head -n 1)
          APK_FILE=$(ls smartsensors/build/outputs/apk/release/*.apk | head -n 1)
          echo "AAB_FILE=${AAB_FILE}" >> $GITHUB_ENV
          echo "AAB File = $AAB_FILE"
          echo "APK_FILE=${APK_FILE}" >> $GITHUB_ENV
          echo "APK File = $APK_FILE"

      - name: 'Upload AAB Artifact to release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.AAB_FILE }}
          asset_name: smartsensors.aab
          asset_content_type: application/zip

      - name: 'Upload APK Artifact to release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.APK_FILE }}
          asset_name: smartsensors.apk
          asset_content_type: application/zip
